/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useFrame } from '@react-three/fiber';
import { useGLTF } from "@react-three/drei";

export default function Model(props) {
  const group = useRef();

  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    group.current.rotation.z = t / 3;
    group.current.rotation.y = 45;
    group.current.rotation.x = 90;
    group.current.position.y = (1 + Math.sin(t / (props.rotOffset * 20 || 1.5))) / 10;
  });

  var model = props.right ? "/Cube.glb" : "/Cube.glb";
  var { nodes, materials } = useGLTF(model);
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={ nodes.Text4.geometry }
        material={ nodes.Text4.material }
        //position={[0, 0.4, 0]}
        //rotation={[3, 0, 3]}
        scale={[1, 1, 1]}
      />
    </group>
  );
}

useGLTF.preload("/LLetter.glb");